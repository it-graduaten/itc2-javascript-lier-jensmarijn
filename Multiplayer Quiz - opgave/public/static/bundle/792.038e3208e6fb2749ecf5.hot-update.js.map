{"version":3,"file":"792.038e3208e6fb2749ecf5.hot-update.js","mappings":"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","sources":["webpack://quiz/./src/models/Question.ts","webpack://quiz/./src/models/Player.ts","webpack://quiz/./src/types/enum/QuestionMode.ts","webpack://quiz/./src/models/Quiz.ts","webpack://quiz/./src/services/QuestionService.ts","webpack://quiz/./src/types/enum/GameMode.ts","webpack://quiz/./src/types/enum/Difficulty.ts","webpack://quiz/./src/index.ts","webpack://quiz/webpack/runtime/getFullHash"],"sourcesContent":["import { IAnswer } from \"../types/interfaces/IAnswer\";\r\n\r\nclass Question {\r\n\r\n    question: string;\r\n    answers: IAnswer[] = [];\r\n\r\n    constructor(question: string) {\r\n        this.question = question;\r\n    }\r\n\r\n    addAnswer = (answer: IAnswer) => {\r\n        this.answers.push(answer);\r\n    }\r\n\r\n    toString = () => {\r\n        return `Question: ${this.question}, Answers: ${this.answers.map(a => a.text).join(\", \")}`;\r\n    }\r\n}\r\n\r\nexport default Question;","class Player {\r\n    name: string;\r\n    score: number;\r\n    isCurrent: boolean = false;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.score = 0;\r\n    }\r\n\r\n    updateScore = (score: number) => {\r\n        this.score += score;\r\n    }\r\n\r\n    toString = () => {\r\n        return `Player: ${this.name} - Score: ${this.score}`;\r\n    }\r\n}\r\n\r\nexport default Player;","export enum QuestionMode {\r\n    Api = \"API\",\r\n    Custom = \"Vrije ingave\"\r\n}","import Question from \"./Question\";\r\nimport Player from \"./Player\";\r\nimport { GameMode } from \"../types/enum/GameMode\";\r\nimport { QuestionMode } from \"../types/enum/QuestionMode\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nclass QuizApp {\r\n  quizDuration: number = 0;\r\n  questions: Question[] = [];\r\n  currentQuestionIndex: number = 0;\r\n\r\n  numberOfPlayers: number;\r\n  players: Player[] = [];\r\n  currentPlayerIndex: number;\r\n  questionMode: QuestionMode;\r\n\r\n  constructor(questions: Question[], players: Player[], duration: number, numberofPlayers: number) {\r\n    this.questions = questions;\r\n    this.players = players;\r\n    this.quizDuration = duration;\r\n    this.questionMode = QuestionMode.Custom;\r\n    this.currentPlayerIndex = 0;\r\n    this.numberOfPlayers = numberofPlayers; \r\n  }\r\n\r\n  setQuestionMode(mode: QuestionMode) {\r\n    this.questionMode = mode;\r\n  }\r\n\r\n  addQuestion(q: Question) {\r\n    if (!this.questions.includes(q))\r\n      this.questions.push(q);\r\n  }\r\n\r\n  addPlayer(name: string) {\r\n    const player = new Player(name);\r\n    this.players.push(player);\r\n    this.updatePlayerList();\r\n  }\r\n\r\n  removePlayer(name: string) {\r\n    this.players = this.players.filter(player => player.name !== name);\r\n    this.updatePlayerList();\r\n  }\r\n\r\n  startQuiz() {\r\n    this.disableNavigation();\r\n    this.currentQuestionIndex = 0;\r\n    this.nextQuestion();\r\n  }\r\n\r\n  disableNavigation() {\r\n    const navLinks = document.querySelectorAll<HTMLAnchorElement>('#lstNavigation a');\r\n    navLinks.forEach(link => {\r\n        //link.classList.add('disabled-link');\r\n        link.addEventListener('click', this.preventNavigation.bind(this), true);\r\n\r\n    });\r\n  }\r\n\r\n  enableNavigation() {\r\n    const navLinks = document.querySelectorAll<HTMLAnchorElement>('#lstNavigation a');\r\n    navLinks.forEach(link => {\r\n        //link.classList.remove('disabled-link');\r\n        link.removeEventListener('click', this.preventNavigation.bind(this), true);\r\n    });\r\n  }\r\n\r\n  //.bind(this) zorgt ervoor dat we de showcustomalert kunnen oprozpen zonder een uncaught runtime error te krijgen.\r\n\r\n\r\n  preventNavigation(event: MouseEvent) {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    this.showCustomAlert(\"Navigatie is uitgeschakeld tijdens de quiz. Probeer na de quiz opnieuw aub.\")\r\n}\r\n\r\nshowCustomAlert(message: string){\r\nSwal.fire({\r\n  text: message,\r\n  timer: 5000,\r\n  timerProgressBar: true,\r\n  showConfirmButton: true,\r\n  position: 'top',\r\n  toast: true\r\n})\r\n}\r\n\r\n\r\n  testIfAnswerIsCorrect(index: number, answer: string) {\r\n    const question = this.questions[index - 1];\r\n    const correctAnswer = question.answers.find(x => x.isCorrect);\r\n    return correctAnswer?.text === answer;\r\n  }\r\n\r\n  nextQuestion() {\r\n    if (this.currentQuestionIndex === this.questions.length) {\r\n      this.endQuiz();\r\n    } else {\r\n      \r\n      this.showQuestion(this.currentQuestionIndex);\r\n      this.currentQuestionIndex++;\r\n    }\r\n  }\r\n\r\n  updatePlayerList(elementId: string = \"player-list\") {\r\n    const playersList = document.getElementById(elementId) as HTMLElement;\r\n    if (!playersList) return;\r\n\r\n    playersList.innerHTML = \"\";\r\n\r\n    this.players.forEach(player => {\r\n      const li = document.createElement(\"li\");\r\n      li.textContent = `${player.name} ${player.isCurrent ? \"(Current)\" : \"\"}`;\r\n      playersList.appendChild(li);\r\n      this.numberOfPlayers + 1;\r\n      \r\n    });\r\n  }\r\n\r\n  private endQuiz() {\r\n    \r\n    this.hideQuiz();\r\n    this.showScoreBoard();\r\n  }\r\n\r\n  private hideQuiz() {\r\n    this.enableNavigation();\r\n    const quizContainer = document.getElementById(\"quiz-container\") as HTMLElement;\r\n    if (quizContainer) {\r\n      quizContainer.classList.add(\"d-none\");\r\n    }\r\n  }\r\n\r\n  showCurrentPlayer() {\r\n    const currentPlayerContainer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n    const currentPlayerName = document.getElementById(\"current-player-name\") as HTMLElement;\r\n\r\n    if (currentPlayerContainer && currentPlayerName) {\r\n      currentPlayerName.textContent = this.players[this.currentPlayerIndex]?.name;\r\n      currentPlayerContainer.classList.remove(\"d-none\");\r\n    }\r\n  }\r\n\r\n  private sortPlayersOnScore() {\r\n    return this.players.sort((a, b) => b.score - a.score);\r\n  }\r\n\r\n\r\n  private showScoreBoard() {\r\n    const btnRestart = document.getElementById(\"btn-restart-game\") as HTMLButtonElement;\r\n    btnRestart.classList.remove(\"d-none\");\r\n    const scoreBoardContainer = document.getElementById(\"scoreboard-container\") as HTMLElement;\r\n    const scoreBoard = document.getElementById(\"scoreboard\") as HTMLElement;\r\n    if (scoreBoardContainer) {\r\n      scoreBoardContainer.classList.remove(\"d-none\");\r\n      this.sortPlayersOnScore().forEach(player => {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = player.toString();\r\n        scoreBoard.appendChild(li);\r\n      });\r\n    }\r\n\r\n    btnRestart.addEventListener(\"click\", () => {\r\n      window.location.href = \"index.html\"\r\n    })\r\n  }\r\n\r\n  private showQuestion(index: number) {\r\n\r\n    const question = this.questions[index];\r\n    const questionElement = document.getElementById(\"question\") as HTMLElement;\r\n    if (questionElement) {\r\n      questionElement.textContent = question.question;\r\n    }\r\n\r\n    const possibleAnswers = document.getElementById(\"answer-container\") as HTMLElement;\r\n    possibleAnswers.innerHTML = \"\";\r\n    //loop through the answers and create a radiobutton for each one\r\n    question.answers.forEach(answer => {\r\n      // make sure the answers are shown underneat each other\r\n      const label = document.createElement(\"label\");\r\n      const radio = document.createElement(\"input\");\r\n      radio.type = \"radio\";\r\n      radio.name = \"answer\";\r\n      radio.value = answer.text;\r\n      label.appendChild(radio);\r\n      label.appendChild(document.createTextNode(answer.text));\r\n      possibleAnswers.appendChild(label);\r\n      label.style.display = \"block\";\r\n      label.style.marginBottom = \"10px\"; // Adjust the margin as needed for spacing      \r\n    });\r\n  }\r\n}\r\n\r\nexport default QuizApp;","import Question from \"../models/Question\";\r\nimport { Difficulty } from \"../types/enum/Difficulty\";\r\nimport { IAPIQuestion } from \"../types/interfaces/IAPIQuestion\";\r\nimport { ICategory } from \"../types/interfaces/ICategory\";\r\n\r\nclass QuestionService {\r\n    baseUrl: string = 'https://opentdb.com/api.php?amount='\r\n    categoryUrl: string = 'https://opentdb.com/api_category.php'\r\n\r\n    constructor() {\r\n    }\r\n\r\n\r\ngetQuestions = async(aantal:number, difficulty: string, categorie: ICategory) => {\r\n    try {\r\n        const response = await fetch(`${this.baseUrl}${aantal}&type=multiple&difficulty=${difficulty}&category=${categorie.id}`);\r\n\r\n        if (!response.ok){\r\n            throw new Error(\"Api kan niet worden ophehaald\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const questions = data.results.map((q: IAPIQuestion) => q);\r\n        return questions;\r\n    } catch (error) {\r\n        console.error(error);\r\n}\r\n}\r\n\r\n   \r\n/*getCategories() {\r\n    fetch('https://opentdb.com/api_category.php')\r\n        .then(response => {\r\n            if (!response.ok){\r\n                throw new Error(\"Api kan niet worden ophehaald\");\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => console.log(data))\r\n        .catch((error: Error) => {\r\n             console.error(error);\r\n         });\r\n}*/\r\n\r\ngetCategories = async() => {\r\n    try {\r\n        const response = await fetch(this.categoryUrl)\r\n\r\n        if (!response.ok){\r\n            throw new Error(\"Api kan niet worden ophehaald\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const categories = data.trivia_categories.map((c: ICategory) => c.name);\r\n        return categories;\r\n    } catch (error) {\r\n        console.error(error);\r\n\r\n}\r\n}\r\n}\r\nexport default QuestionService","export enum GameMode {\r\n    Single = \"Single Player\",\r\n    Multi = \"Multiplayer\"\r\n  }","export enum Difficulty {\r\n    easy = \"easy\",\r\n    medium = \"medium\",\r\n    hard = \"hard\"\r\n}\r\n","import Player from \"./models/Player\";\r\nimport Question from \"./models/Question\";\r\nimport QuizApp from \"./models/Quiz\";\r\nimport QuestionService from \"./services/QuestionService\";\r\nimport { GameMode } from \"./types/enum/GameMode\";\r\nimport { QuestionMode } from \"./types/enum/QuestionMode\";\r\nimport { IAnswer } from \"./types/interfaces/IAnswer\";\r\nimport { ICategory } from \"./types/interfaces/ICategory\";\r\nimport { Difficulty } from \"./types/enum/Difficulty\";\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    const quizApp = new QuizApp([], [], 0, 1);\r\n    const questionAnswers: IAnswer[] = [];\r\n    const divWelcome = document.getElementById(\"welcome-container\") as HTMLElement;\r\n    const divQuestionsContainer = document.getElementById(\"question-container\") as HTMLElement;\r\n    const divPlayersContainer = document.getElementById(\"players-container\") as HTMLElement;\r\n    const divQuizContainer = document.getElementById(\"quiz-container\") as HTMLElement;\r\n    const divScoreboardContainer = document.getElementById(\"scoreboard-container\") as HTMLElement;\r\n    const divQuestionApiContainer = document.getElementById(\"question-api-container\") as HTMLElement;\r\n    const divCurrentPlayer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n    const questionService = new QuestionService();\r\n    \r\n\r\n\r\n    //navigatie\r\n    document.getElementById(\"aQuestions\")?.addEventListener('click', () => {\r\n        quizApp.questionMode === QuestionMode.Custom ? updateVisibleItem(divQuestionsContainer) : updateVisibleItem(divQuestionApiContainer);\r\n    });\r\n\r\n    document.getElementById(\"aPlayers\")?.addEventListener('click', () => {\r\n        updateVisibleItem(divPlayersContainer);\r\n        const btn = document.getElementById(\"btn-start-quiz\") as HTMLButtonElement;\r\n        const btnAddPlayer = document.getElementById(\"btn-add-player\") as HTMLButtonElement;\r\n\r\n        if (quizApp.players.length === quizApp.numberOfPlayers) {\r\n            btn.classList.remove('d-none');\r\n            btnAddPlayer.classList.add('d-none');\r\n        } else {\r\n            btn.classList.add('d-none');\r\n            btnAddPlayer.classList.remove('d-none');\r\n        }\r\n\r\n    });\r\n\r\n    document.getElementById(\"aQuiz\")?.addEventListener('click', () => {\r\n\r\n        if (quizApp.players.length === quizApp.numberOfPlayers)\r\n            quizApp.startQuiz();\r\n        showCurrentPlayerBlock();\r\n        updateVisibleItem(divQuizContainer);\r\n        updateVisibleItem(divCurrentPlayer);\r\n\r\n    });\r\n\r\n    document.getElementById(\"aScoreboard\")?.addEventListener('click', () => {\r\n        updateVisibleItem(divScoreboardContainer);\r\n        \r\n    });\r\n\r\n    document.getElementById(\"btn-start-quiz\")?.addEventListener('click', () => {\r\n        if (quizApp.players.length === quizApp.numberOfPlayers)\r\n            quizApp.startQuiz();\r\n        showCurrentPlayerBlock();\r\n        updateVisibleItem(divQuizContainer);\r\n        updateVisibleItem(divCurrentPlayer);\r\n    });\r\n\r\n\r\n    document.getElementById(\"btn-next\")?.addEventListener('click', () => {\r\n        if (quizApp.numberOfPlayers < 1) {\r\n            quizApp.showCustomAlert(\"geef een aantal spelers in groter dan 1!\")\r\n            alert('test!!!')\r\n        }\r\n        else{\r\n            updateVisibleItem(divPlayersContainer);\r\n        }\r\n        \r\n    });\r\n\r\n  \r\n    // implement logic to set the number of players\r\n\r\n    document.getElementById('inpNrPlayers')?.addEventListener(\"change\", (e) => {\r\n        const inpNumberPlayers = e.target as HTMLInputElement;\r\n        if (parseInt(inpNumberPlayers.value) < 1){\r\n            quizApp.showCustomAlert(\"geef meer dan 2 spelers in!\")\r\n            return;\r\n        }\r\n        quizApp.numberOfPlayers = parseInt(inpNumberPlayers.value);\r\n    })\r\n\r\n    document.getElementById('gameMode')?.addEventListener(\"change\", (e) => {\r\n        const gameModeInput = e.target as HTMLInputElement;\r\n\r\n\r\n        const gameMode = gameModeInput.checked ? GameMode.Multi : GameMode.Single;  \r\n\r\n\r\n        const gameModeText = document.getElementById('txtGameMode');\r\n        const inpNumberPlayers = document.getElementById('inpNrPlayers');\r\n\r\n        \r\n        if (gameModeText) {\r\n            gameModeText.textContent = gameMode;\r\n        }\r\n\r\n        if  (gameMode === 'Multiplayer') {\r\n            if (inpNumberPlayers){\r\n                inpNumberPlayers.classList.remove('d-none');\r\n                const numberOfPlayersInput = document.getElementById('inpNrPlayers') as HTMLInputElement;\r\n                const numberOfPlayers = parseInt(numberOfPlayersInput.value);\r\n                \r\n                console.log(numberOfPlayers)\r\n            }\r\n        }else {\r\n        \r\n            if (inpNumberPlayers) {\r\n                inpNumberPlayers.classList.add('d-none');\r\n                quizApp.numberOfPlayers = 1;\r\n        }\r\n    }\r\n    });\r\n\r\n     \r\n\r\n    document.getElementById(\"txtNumberQuestions\")?.addEventListener(\"change\", (e) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const number = parseInt(target.value);\r\n        quizApp.quizDuration = number * quizApp.numberOfPlayers;\r\n        const btn = document.getElementById(\"btnStart\") as HTMLButtonElement;\r\n        btn.disabled = number <= 0;\r\n    });\r\n\r\n    // implement logic to set the question mode\r\n    document.getElementById('questionMode')?.addEventListener(\"change\", (e) => {\r\n        const questionText = document.getElementById(\"txtQuestionMode\") as HTMLElement;\r\n        const target = e.target as HTMLInputElement;\r\n       if (!target.checked) {\r\n       quizApp.questionMode =(QuestionMode.Custom)\r\n       questionText.innerText = QuestionMode.Custom;\r\n       }else{\r\n        quizApp.questionMode =(QuestionMode.Api)\r\n        questionText.innerText = QuestionMode.Api;\r\n       }\r\n    });\r\n\r\n    // implement logic to fetch questions from api\r\n\r\n \r\n\r\n    document.getElementById(\"btnStart\")?.addEventListener(\"click\", () => {\r\n        if(quizApp.numberOfPlayers <=1){\r\n            quizApp.showCustomAlert(\"geef een aantal spelers in groter dan 1!\")\r\n            return\r\n        }\r\n        quizApp.quizDuration = quizApp.numberOfPlayers\r\n        console.log(quizApp.quizDuration)\r\n        const navigation = document.getElementById(\"lstNavigation\")\r\n        navigation?.classList.remove('d-none')\r\n        if (quizApp.questionMode === QuestionMode.Custom) {\r\n            updateVisibleItem(divQuestionsContainer);\r\n            const noQuestionText = document.getElementById(\"no-questions\") as HTMLElement;\r\n            let amountOfQuestions = (quizApp.quizDuration * quizApp.numberOfPlayers);\r\n            noQuestionText.innerText = `No questions have been added yet. Add ${amountOfQuestions} questions to start.`;\r\n        }\r\n        \r\n        \r\n        else {\r\n            updateVisibleItem(divQuestionApiContainer);\r\n        }\r\n\r\n    });\r\n\r\n    document.getElementById(\"btn-add-question\")?.addEventListener(\"click\", () => {\r\n        const q = document.getElementById(\"txt-question\") as HTMLInputElement;\r\n        const btnCloseModal = document.getElementById(\"btnCloseModal\") as HTMLButtonElement;\r\n        \r\n        if (!validateQuestionInput(q.value, questionAnswers)) {\r\n            // alert(\"Please fill in the question and provide at least one answer with the correct option.\");\r\n            return;\r\n        }\r\n\r\n        // if(questionAnswers.length <2){\r\n        //     alert(\"geef minstens 2 antwoorden.\")\r\n        //     return\r\n        // }\r\n        const question = new Question(q.value);\r\n        questionAnswers.forEach(a => question.addAnswer(a));\r\n        quizApp.addQuestion(question);\r\n        updateQuestionList();\r\n        clearAnwsersList();\r\n        q.value = '';\r\n\r\n        quizApp.quizDuration === quizApp.questions.length ? updateVisibleItem(divPlayersContainer) : null;\r\n        btnCloseModal.click();\r\n        toggleAddQuestionButton();\r\n    });\r\n\r\n    document.getElementById(\"btn-add-answer\")?.addEventListener('click', () => {\r\n        const answer = document.getElementById(\"txt-answer\") as HTMLInputElement;\r\n       \r\n        const chkAnswer = document.getElementById(\"chk-correct\") as HTMLInputElement;\r\n        const a: IAnswer = {\r\n            text: answer.value,\r\n            isCorrect: chkAnswer.checked\r\n        }\r\n        \r\n        if(a.text != \"\"){\r\n            questionAnswers.push(a);\r\n            updateAnswersList();\r\n        }\r\n\r\n        else{\r\n            alert(\"Geef een tekstuele waarde in voor het antwoord.\")\r\n        }\r\n        \r\n\r\n        answer.value = '';\r\n        chkAnswer.checked = false;\r\n    });\r\n\r\n  \r\n\r\n    document.getElementById(\"btn-add-player\")?.addEventListener(\"click\", () => {\r\n        const input = document.getElementById(\"player-name\") as HTMLInputElement;\r\n        const name = input.value.trim();\r\n        let addedPlayers = quizApp.players.length;\r\n        console.log(addedPlayers)\r\n\r\n        if(name === ''){\r\n            alert('Naam mag niet leeg zijn')\r\n            return;\r\n        }\r\n\r\n        const existingPlayers = quizApp.players.find(player => player.name === name);\r\n    if (existingPlayers) {\r\n        alert('Kies een unieke naam')\r\n        return;\r\n    }\r\n        \r\n        quizApp.addPlayer(name);\r\n        addedPlayers ++;\r\n    \r\n        input.value = \"\";\r\n\r\n        if (addedPlayers === quizApp.numberOfPlayers) {\r\n            showCurrentPlayerBlock();\r\n            updateVisibleItem(divQuizContainer);\r\n            quizApp.startQuiz();\r\n        }else\r\n                alert(`voeg nog ${quizApp.numberOfPlayers - quizApp.players.length} spelers toe`);\r\n            \r\n        \r\n    });\r\n\r\n    // implement logic to submit the answer, update the score and move to the next question\r\n    // implement logic to restart the game\r\n    document.getElementById('btn-restart-game')?.addEventListener('click', () => {\r\n        restartGame();\r\n        \r\n    })\r\n\r\n    const restartGame = () => {\r\n        quizApp.questions = [];\r\n        quizApp.players = [];\r\n        quizApp.currentPlayerIndex = 0;\r\n        quizApp.currentQuestionIndex = 0;\r\n        hideAllElementsExcept(divWelcome);\r\n    };\r\n\r\n    document.getElementById(\"btn-submit\")?.addEventListener('click', () => {\r\n        // Zoek het geselecteerde antwoord\r\n        const selectedAnswer = document.querySelector('input[type=\"radio\"]:checked');\r\n\r\n        const id = quizApp.currentQuestionIndex;\r\n        const correctAnswerList = document.getElementById(\"correct-answer-list\") as HTMLElement\r\n\r\n        const selectedAnswerValue = (selectedAnswer as HTMLInputElement).value\r\n\r\n        const correctAnswer = correctAnswerList.contains(selectedAnswer)\r\n\r\n        const correctQuestion = quizApp.testIfAnswerIsCorrect(quizApp.currentQuestionIndex ,selectedAnswerValue)\r\n        \r\n        \r\n\r\n        const currentPlayer = quizApp.players[quizApp.currentPlayerIndex]\r\n        \r\n        if(correctQuestion == true){\r\n            currentPlayer.updateScore(1)\r\n        }\r\n        \r\n        console.log(currentPlayer)\r\n        console.log(currentPlayer.score)\r\n        console.log(quizApp.currentQuestionIndex)\r\n\r\n        quizApp.nextQuestion()\r\n        \r\n    });\r\n    \r\n\r\n\r\n    const updateQuestionList = () => {\r\n        const noQuestions = document.getElementById(\"no-questions\") as HTMLElement;\r\n        const list = document.getElementById(\"question-list\") as HTMLElement;\r\n\r\n        list.innerHTML = '';\r\n\r\n        quizApp.questions.forEach(q => {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = q.toString();\r\n            list.appendChild(li);\r\n        });\r\n        noQuestions.classList.add('d-none');\r\n    };\r\n\r\n    const updateAnswersList = () => {\r\n        const answersList = document.getElementById(\"answers-list\") as HTMLElement;\r\n        const correctAnswerList = document.getElementById(\"correct-answer-list\") as HTMLElement;\r\n\r\n        answersList.innerHTML = '';\r\n        correctAnswerList.innerHTML = '';\r\n\r\n        questionAnswers.forEach(a => {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = a.text;\r\n            \r\n            answersList.appendChild(li);\r\n        });\r\n\r\n        const correctAnswer = questionAnswers.find(a => a.isCorrect)\r\n        if (correctAnswer) {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = correctAnswer.text;\r\n            correctAnswerList.appendChild(li);\r\n        }\r\n\r\n        toggleAddButton(correctAnswer);\r\n    };\r\n\r\n    const clearAnwsersList = () => {\r\n        questionAnswers.length = 0;\r\n        updateAnswersList();\r\n    };\r\n\r\n    const toggleAddQuestionButton = () => {\r\n        const btn = document.getElementById(\"btn-add-q\") as HTMLButtonElement;\r\n        if (quizApp.questions.length === quizApp.quizDuration * quizApp.numberOfPlayers) {\r\n            btn.disabled = true;\r\n        }\r\n    };\r\n\r\n    const toggleAddButton = (correctAnswer: IAnswer | undefined) => {\r\n        const btn = document.getElementById(\"btn-add-question\") as HTMLButtonElement;\r\n        btn.disabled = correctAnswer ? false : true;\r\n    };\r\n\r\n    const hideAllElementsExcept = (element: HTMLElement) => {\r\n        const elementsToHide = [divCurrentPlayer, divWelcome, divQuestionsContainer, divPlayersContainer, divQuizContainer, divScoreboardContainer, divQuestionApiContainer];\r\n        elementsToHide.forEach(e => {\r\n            if (e !== null)\r\n                e.classList.add('d-none')\r\n        });\r\n        element.classList.remove('d-none');\r\n    };\r\n\r\n    const updateVisibleItem = (element: HTMLElement) => {\r\n        hideAllElementsExcept(element);\r\n\r\n        if (element === divQuestionApiContainer || element === divQuestionsContainer) {\r\n            const btnAdd = document.getElementById(\"btn-add-q\") as HTMLButtonElement;\r\n            const btnNext = document.getElementById(\"btn-next\") as HTMLButtonElement;\r\n            if (quizApp.questionMode === QuestionMode.Custom) {\r\n                btnNext.classList.add(\"d-none\");\r\n                btnAdd.classList.remove(\"d-none\");\r\n                return;\r\n            } else {\r\n                btnNext.classList.remove(\"d-none\");\r\n                btnAdd.classList.add(\"d-none\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (element === divQuizContainer) {\r\n            showCurrentPlayerBlock();\r\n            return;\r\n        }\r\n    };\r\n\r\n    const validateQuestionInput = (questionText: string, answers: IAnswer[]): boolean => {\r\n        \r\n        if(wordCount(questionText) < 5){\r\n            alert(\"De vraag moet minstens 5 woorden omvatten.\")\r\n            return false\r\n        }\r\n        if (checkAnswers(answers) == false){\r\n            alert(\"Geef minstens 2 antwoorden waarvan 1 correct.\")\r\n            return false\r\n        }\r\n\r\n        else{\r\n            return true\r\n        }\r\n        // implement validation logic, return true if the input is valid\r\n        // logic: questionText should have at least 5 characters, answers should have at least one correct answer\r\n       \r\n    };\r\n\r\n    const showCurrentPlayerBlock = () => {\r\n        const currentPlayer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n        currentPlayer.classList.remove(\"d-none\");\r\n        const currentPlayerName = document.getElementById(\"current-player-name\") as HTMLElement;\r\n        currentPlayerName.innerText = quizApp.players[quizApp.currentPlayerIndex]?.name ?? '';\r\n    }\r\n    function wordCount(questionText: string){\r\n        const words = questionText.split(\" \")\r\n        return words.length\r\n    }\r\n\r\n    function checkAnswers(answersList: IAnswer[]){\r\n        if (answersList.length < 2){\r\n            return false\r\n        }\r\n\r\n\r\n        answersList.forEach(a => {\r\n            if  (a.isCorrect == true){\r\n                return true\r\n            }\r\n\r\n            if (a.text == \"\"){\r\n                return false\r\n            }\r\n\r\n            return false\r\n        });\r\n\r\n        return true\r\n    }\r\n\r\n /*const getCategories = async () =>{\r\n    try{\r\n        const categories =  questionService.getCategories()\r\n        const ulList = document.createElement('ul')\r\n\r\n        categories.forEach((category: ICategory) => {\r\n            const liElement = document.createElement('li');\r\n            liElement.textContent = category.name;\r\n            ulList.appendChild(liElement);\r\n        });\r\n\r\n        document.body.appendChild(ulList);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};*/\r\n\r\nconst getDifficulty = () => {\r\n    const difficultyList: string[] = [];\r\n\r\n    for (const difficulty in Difficulty) {\r\n        const value = Difficulty[difficulty as keyof typeof Difficulty];\r\n\r\n        if (typeof value === \"string\") {\r\n            difficultyList.push(value);\r\n        }\r\n    }\r\n\r\n    return difficultyList;\r\n\r\n};\r\n\r\n\r\n   const getCategories = async () => {\r\n        try{\r\n            const categories =  questionService.getCategories()\r\n            console.log(categories)\r\n        }catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const getQuestions = async () => {\r\n        try{\r\n            const questions =  questionService.getQuestions(2, \"easy\", {id:16, name:\"Art\"})\r\n            console.log(questions)\r\n        }catch (error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const init = () => {\r\n        hideAllElementsExcept(divWelcome);\r\n        getDifficulty();\r\n        getCategories();\r\n        getQuestions();\r\n    };\r\n\r\n\r\n    init();\r\n\r\n});\r\n","__webpack_require__.h = () => (\"ee4bbbe8eab0467b2369\")"],"names":["question","answers","addAnswer","answer","push","toString","map","a","text","join","this","name","isCurrent","updateScore","score","QuestionMode","questions","players","duration","numberofPlayers","quizDuration","currentQuestionIndex","questionMode","Custom","currentPlayerIndex","numberOfPlayers","setQuestionMode","mode","addQuestion","q","includes","addPlayer","player","updatePlayerList","removePlayer","filter","startQuiz","disableNavigation","nextQuestion","document","querySelectorAll","forEach","link","addEventListener","preventNavigation","bind","enableNavigation","removeEventListener","event","preventDefault","stopPropagation","showCustomAlert","message","timer","timerProgressBar","showConfirmButton","position","toast","testIfAnswerIsCorrect","index","correctAnswer","find","x","isCorrect","length","endQuiz","showQuestion","elementId","playersList","getElementById","innerHTML","li","createElement","textContent","appendChild","hideQuiz","showScoreBoard","quizContainer","classList","add","showCurrentPlayer","currentPlayerContainer","currentPlayerName","remove","sortPlayersOnScore","sort","b","btnRestart","scoreBoardContainer","scoreBoard","window","location","href","questionElement","possibleAnswers","label","radio","type","value","createTextNode","style","display","marginBottom","baseUrl","categoryUrl","getQuestions","aantal","difficulty","categorie","fetch","id","response","ok","Error","json","results","console","error","getCategories","trivia_categories","c","GameMode","Difficulty","quizApp","Quiz","questionAnswers","divWelcome","divQuestionsContainer","divPlayersContainer","divQuizContainer","divScoreboardContainer","divQuestionApiContainer","divCurrentPlayer","questionService","updateVisibleItem","btn","btnAddPlayer","showCurrentPlayerBlock","alert","e","inpNumberPlayers","target","parseInt","gameMode","checked","Multi","Single","gameModeText","numberOfPlayersInput","log","number","disabled","questionText","innerText","Api","navigation","noQuestionText","amountOfQuestions","btnCloseModal","validateQuestionInput","updateQuestionList","clearAnwsersList","click","toggleAddQuestionButton","chkAnswer","updateAnswersList","input","trim","addedPlayers","restartGame","hideAllElementsExcept","selectedAnswer","querySelector","correctAnswerList","selectedAnswerValue","correctQuestion","contains","currentPlayer","noQuestions","list","answersList","toggleAddButton","element","btnAdd","btnNext","split","wordCount","difficultyList","getDifficulty","categories","__webpack_require__","h"],"sourceRoot":""}