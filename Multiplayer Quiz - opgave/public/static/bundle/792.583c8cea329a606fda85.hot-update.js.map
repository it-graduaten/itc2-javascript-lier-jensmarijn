{"version":3,"file":"792.583c8cea329a606fda85.hot-update.js","mappings":"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","sources":["webpack://quiz/./src/models/Question.ts","webpack://quiz/./src/models/Player.ts","webpack://quiz/./src/types/enum/QuestionMode.ts","webpack://quiz/./src/models/Quiz.ts","webpack://quiz/./src/types/enum/GameMode.ts","webpack://quiz/./src/index.ts","webpack://quiz/webpack/runtime/getFullHash"],"sourcesContent":["import { IAnswer } from \"../types/interfaces/IAnswer\";\r\n\r\nclass Question {\r\n\r\n    question: string;\r\n    answers: IAnswer[] = [];\r\n\r\n    constructor(question: string) {\r\n        this.question = question;\r\n    }\r\n\r\n    addAnswer = (answer: IAnswer) => {\r\n        this.answers.push(answer);\r\n    }\r\n\r\n    toString = () => {\r\n        return `Question: ${this.question}, Answers: ${this.answers.map(a => a.text).join(\", \")}`;\r\n    }\r\n}\r\n\r\nexport default Question;","class Player {\r\n    name: string;\r\n    score: number;\r\n    isCurrent: boolean = false;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.score = 0;\r\n    }\r\n\r\n    updateScore = (score: number) => {\r\n        this.score += score;\r\n    }\r\n\r\n    toString = () => {\r\n        return `Player: ${this.name} - Score: ${this.score}`;\r\n    }\r\n}\r\n\r\nexport default Player;","export enum QuestionMode {\r\n    Api = \"API\",\r\n    Custom = \"Vrije ingave\"\r\n}","import Question from \"./Question\";\r\nimport Player from \"./Player\";\r\nimport { GameMode } from \"../types/enum/GameMode\";\r\nimport { QuestionMode } from \"../types/enum/QuestionMode\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nclass QuizApp {\r\n  quizDuration: number = 0;\r\n  questions: Question[] = [];\r\n  currentQuestionIndex: number = 0;\r\n\r\n  numberOfPlayers: number;\r\n  players: Player[] = [];\r\n  currentPlayerIndex: number;\r\n  questionMode: QuestionMode;\r\n\r\n  constructor(questions: Question[], players: Player[], duration: number, numberofPlayers: number) {\r\n    this.questions = questions;\r\n    this.players = players;\r\n    this.quizDuration = duration;\r\n    this.questionMode = QuestionMode.Custom;\r\n    this.currentPlayerIndex = 0;\r\n    this.numberOfPlayers = numberofPlayers; \r\n  }\r\n\r\n  setQuestionMode(mode: QuestionMode) {\r\n    this.questionMode = mode;\r\n  }\r\n\r\n  addQuestion(q: Question) {\r\n    if (!this.questions.includes(q))\r\n      this.questions.push(q);\r\n  }\r\n\r\n  addPlayer(name: string) {\r\n    const player = new Player(name);\r\n    this.players.push(player);\r\n    this.updatePlayerList();\r\n  }\r\n\r\n  removePlayer(name: string) {\r\n    this.players = this.players.filter(player => player.name !== name);\r\n    this.updatePlayerList();\r\n  }\r\n\r\n  startQuiz() {\r\n    this.disableNavigation();\r\n    this.currentQuestionIndex = 0;\r\n    this.nextQuestion();\r\n  }\r\n\r\n  disableNavigation() {\r\n    const navLinks = document.querySelectorAll<HTMLAnchorElement>('#lstNavigation a');\r\n    navLinks.forEach(link => {\r\n        //link.classList.add('disabled-link');\r\n        link.addEventListener('click', this.preventNavigation.bind(this), true);\r\n\r\n    });\r\n  }\r\n\r\n  enableNavigation() {\r\n    const navLinks = document.querySelectorAll<HTMLAnchorElement>('#lstNavigation a');\r\n    navLinks.forEach(link => {\r\n        //link.classList.remove('disabled-link');\r\n        link.removeEventListener('click', this.preventNavigation.bind(this), true);\r\n    });\r\n  }\r\n\r\n  //.bind(this) zorgt ervoor dat we de showcustomalert kunnen oprozpen zonder een uncaught runtime error te krijgen.\r\n\r\n\r\n  preventNavigation(event: MouseEvent) {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    this.showCustomAlert(\"Navigatie is uitgeschakeld tijdens de quiz. Probeer na de quiz opnieuw aub.\")\r\n}\r\n\r\nshowCustomAlert(message: string){\r\nSwal.fire({\r\n  text: message,\r\n  timer: 5000,\r\n  timerProgressBar: true,\r\n  showConfirmButton: true,\r\n  position: 'top',\r\n  toast: true\r\n})\r\n}\r\n\r\n\r\n  testIfAnswerIsCorrect(index: number, answer: string) {\r\n    const question = this.questions[index - 1];\r\n    const correctAnswer = question.answers.find(x => x.isCorrect);\r\n    return correctAnswer?.text === answer;\r\n  }\r\n\r\n  nextQuestion() {\r\n    if (this.currentQuestionIndex === this.questions.length) {\r\n      this.endQuiz();\r\n    } else {\r\n      this.showQuestion(this.currentQuestionIndex);\r\n      this.currentQuestionIndex++;\r\n    }\r\n  }\r\n\r\n  updatePlayerList(elementId: string = \"player-list\") {\r\n    const playersList = document.getElementById(elementId) as HTMLElement;\r\n    if (!playersList) return;\r\n\r\n    playersList.innerHTML = \"\";\r\n\r\n    this.players.forEach(player => {\r\n      const li = document.createElement(\"li\");\r\n      li.textContent = `${player.name} ${player.isCurrent ? \"(Current)\" : \"\"}`;\r\n      playersList.appendChild(li);\r\n    });\r\n  }\r\n\r\n  private endQuiz() {\r\n    \r\n    this.hideQuiz();\r\n    this.showScoreBoard();\r\n  }\r\n\r\n  private hideQuiz() {\r\n    this.enableNavigation();\r\n    const quizContainer = document.getElementById(\"quiz-container\") as HTMLElement;\r\n    if (quizContainer) {\r\n      quizContainer.classList.add(\"d-none\");\r\n    }\r\n  }\r\n\r\n  showCurrentPlayer() {\r\n    const currentPlayerContainer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n    const currentPlayerName = document.getElementById(\"current-player-name\") as HTMLElement;\r\n\r\n    if (currentPlayerContainer && currentPlayerName) {\r\n      currentPlayerName.textContent = this.players[this.currentPlayerIndex]?.name;\r\n      currentPlayerContainer.classList.remove(\"d-none\");\r\n    }\r\n  }\r\n\r\n  private sortPlayersOnScore() {\r\n    return this.players.sort((a, b) => b.score - a.score);\r\n  }\r\n\r\n\r\n  private showScoreBoard() {\r\n    const btnRestart = document.getElementById(\"btn-restart-game\") as HTMLButtonElement;\r\n    btnRestart.classList.remove(\"d-none\");\r\n    const scoreBoardContainer = document.getElementById(\"scoreboard-container\") as HTMLElement;\r\n    const scoreBoard = document.getElementById(\"scoreboard\") as HTMLElement;\r\n    if (scoreBoardContainer) {\r\n      scoreBoardContainer.classList.remove(\"d-none\");\r\n      this.sortPlayersOnScore().forEach(player => {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = player.toString();\r\n        scoreBoard.appendChild(li);\r\n      });\r\n    }\r\n\r\n    btnRestart.addEventListener(\"click\", () => {\r\n      window.location.href = \"index.html\"\r\n    })\r\n  }\r\n\r\n  private showQuestion(index: number) {\r\n\r\n    const question = this.questions[index];\r\n    const questionElement = document.getElementById(\"question\") as HTMLElement;\r\n    if (questionElement) {\r\n      questionElement.textContent = question.question;\r\n    }\r\n\r\n    const possibleAnswers = document.getElementById(\"answer-container\") as HTMLElement;\r\n    possibleAnswers.innerHTML = \"\";\r\n    //loop through the answers and create a radiobutton for each one\r\n    question.answers.forEach(answer => {\r\n      // make sure the answers are shown underneat each other\r\n      const label = document.createElement(\"label\");\r\n      const radio = document.createElement(\"input\");\r\n      radio.type = \"radio\";\r\n      radio.name = \"answer\";\r\n      radio.value = answer.text;\r\n      label.appendChild(radio);\r\n      label.appendChild(document.createTextNode(answer.text));\r\n      possibleAnswers.appendChild(label);\r\n      label.style.display = \"block\";\r\n      label.style.marginBottom = \"10px\"; // Adjust the margin as needed for spacing      \r\n    });\r\n  }\r\n}\r\n\r\nexport default QuizApp;","export enum GameMode {\r\n    Single = \"Single Player\",\r\n    Multi = \"Multiplayer\"\r\n  }","import Player from \"./models/Player\";\r\nimport Question from \"./models/Question\";\r\nimport QuizApp from \"./models/Quiz\";\r\nimport QuestionService from \"./services/QuestionService\";\r\nimport { GameMode } from \"./types/enum/GameMode\";\r\nimport { QuestionMode } from \"./types/enum/QuestionMode\";\r\nimport { IAnswer } from \"./types/interfaces/IAnswer\";\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    const quizApp = new QuizApp([], [], 0, 1);\r\n    const questionAnswers: IAnswer[] = [];\r\n    const divWelcome = document.getElementById(\"welcome-container\") as HTMLElement;\r\n    const divQuestionsContainer = document.getElementById(\"question-container\") as HTMLElement;\r\n    const divPlayersContainer = document.getElementById(\"players-container\") as HTMLElement;\r\n    const divQuizContainer = document.getElementById(\"quiz-container\") as HTMLElement;\r\n    const divScoreboardContainer = document.getElementById(\"scoreboard-container\") as HTMLElement;\r\n    const divQuestionApiContainer = document.getElementById(\"question-api-container\") as HTMLElement;\r\n    const divCurrentPlayer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n\r\n\r\n    //navigatie\r\n    document.getElementById(\"aQuestions\")?.addEventListener('click', () => {\r\n        quizApp.questionMode === QuestionMode.Custom ? updateVisibleItem(divQuestionsContainer) : updateVisibleItem(divQuestionApiContainer);\r\n    });\r\n\r\n    document.getElementById(\"aPlayers\")?.addEventListener('click', () => {\r\n        updateVisibleItem(divPlayersContainer);\r\n        const btn = document.getElementById(\"btn-start-quiz\") as HTMLButtonElement;\r\n        const btnAddPlayer = document.getElementById(\"btn-add-player\") as HTMLButtonElement;\r\n\r\n        if (quizApp.players.length === quizApp.numberOfPlayers) {\r\n            btn.classList.remove('d-none');\r\n            btnAddPlayer.classList.add('d-none');\r\n        } else {\r\n            btn.classList.add('d-none');\r\n            btnAddPlayer.classList.remove('d-none');\r\n        }\r\n\r\n    });\r\n\r\n    document.getElementById(\"aQuiz\")?.addEventListener('click', () => {\r\n\r\n        if (quizApp.players.length === quizApp.numberOfPlayers)\r\n            quizApp.startQuiz();\r\n        showCurrentPlayerBlock();\r\n        updateVisibleItem(divQuizContainer);\r\n        updateVisibleItem(divCurrentPlayer);\r\n\r\n    });\r\n\r\n    document.getElementById(\"aScoreboard\")?.addEventListener('click', () => {\r\n        updateVisibleItem(divScoreboardContainer);\r\n        \r\n    });\r\n\r\n    document.getElementById(\"btn-start-quiz\")?.addEventListener('click', () => {\r\n        if (quizApp.players.length === quizApp.numberOfPlayers)\r\n            quizApp.startQuiz();\r\n        showCurrentPlayerBlock();\r\n        updateVisibleItem(divQuizContainer);\r\n        updateVisibleItem(divCurrentPlayer);\r\n    });\r\n\r\n\r\n    document.getElementById(\"btn-next\")?.addEventListener('click', () => {\r\n        updateVisibleItem(divPlayersContainer);\r\n    });\r\n\r\n  \r\n    // implement logic to set the number of players\r\n    document.getElementById('gameMode')?.addEventListener(\"change\", (e) => {\r\n        const gameModeInput = e.target as HTMLInputElement;\r\n        const gameMode = gameModeInput.checked ? GameMode.Single : GameMode.Multi;  \r\n        const gameModeText = document.getElementById('txtGameMode');\r\n        const inpNumberPlayers = document.getElementById('inpNrPlayers');\r\n\r\n        \r\n        if (gameModeText) {\r\n            gameModeText.textContent = gameMode;\r\n        }\r\n\r\n        if  (gameMode === 'Multiplayer') {\r\n            if (inpNumberPlayers){\r\n                inpNumberPlayers.classList.remove('d-none');\r\n                const numberOfPlayersInput = document.getElementById('inpNrPlayers') as HTMLInputElement;\r\n                const numberOfPlayers = parseInt(numberOfPlayersInput.value);\r\n                quizApp.numberOfPlayers = numberOfPlayers;\r\n                \r\n            }\r\n        }else {\r\n        \r\n            if (inpNumberPlayers) {\r\n                inpNumberPlayers.classList.add('d-none');\r\n                quizApp.numberOfPlayers = 1;\r\n        }\r\n    }\r\n\r\n    console.log(quizApp.players); \r\n    });\r\n\r\n     \r\n\r\n    document.getElementById(\"txtNumberQuestions\")?.addEventListener(\"change\", (e) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const number = parseInt(target.value);\r\n        quizApp.quizDuration = number;\r\n        const btn = document.getElementById(\"btnStart\") as HTMLButtonElement;\r\n        btn.disabled = number <= 0;\r\n    });\r\n\r\n    // implement logic to set the question mode\r\n    document.getElementById('questionMode')?.addEventListener(\"change\", (e) => {\r\n        const questionText = document.getElementById(\"txtQuestionMode\") as HTMLElement;\r\n        const target = e.target as HTMLInputElement;\r\n       if (!target.checked) {\r\n       quizApp.questionMode =(QuestionMode.Custom)\r\n       questionText.innerText = QuestionMode.Custom;\r\n       }else{\r\n        quizApp.questionMode =(QuestionMode.Api)\r\n        questionText.innerText = QuestionMode.Api;\r\n       }\r\n    });\r\n\r\n    // implement logic to fetch questions from api\r\n \r\n\r\n    document.getElementById(\"btnStart\")?.addEventListener(\"click\", () => {\r\n        const navigation = document.getElementById(\"lstNavigation\")\r\n        navigation?.classList.remove('d-none')\r\n        if (quizApp.questionMode === QuestionMode.Custom) {\r\n            updateVisibleItem(divQuestionsContainer);\r\n            const noQuestionText = document.getElementById(\"no-questions\") as HTMLElement;\r\n            noQuestionText.innerText = `No questions have been added yet. Add ${quizApp.quizDuration * quizApp.numberOfPlayers} questions to start.`;\r\n        } else {\r\n            updateVisibleItem(divQuestionApiContainer);\r\n        }\r\n\r\n    });\r\n\r\n    document.getElementById(\"btn-add-question\")?.addEventListener(\"click\", () => {\r\n        const q = document.getElementById(\"txt-question\") as HTMLInputElement;\r\n        const btnCloseModal = document.getElementById(\"btnCloseModal\") as HTMLButtonElement;\r\n        \r\n        if (!validateQuestionInput(q.value, questionAnswers)) {\r\n            // alert(\"Please fill in the question and provide at least one answer with the correct option.\");\r\n            return;\r\n        }\r\n\r\n        // if(questionAnswers.length <2){\r\n        //     alert(\"geef minstens 2 antwoorden.\")\r\n        //     return\r\n        // }\r\n        const question = new Question(q.value);\r\n        questionAnswers.forEach(a => question.addAnswer(a));\r\n        quizApp.addQuestion(question);\r\n        updateQuestionList();\r\n        clearAnwsersList();\r\n        q.value = '';\r\n\r\n        quizApp.quizDuration === quizApp.questions.length ? updateVisibleItem(divPlayersContainer) : null;\r\n        btnCloseModal.click();\r\n        toggleAddQuestionButton();\r\n    });\r\n\r\n    document.getElementById(\"btn-add-answer\")?.addEventListener('click', () => {\r\n        const answer = document.getElementById(\"txt-answer\") as HTMLInputElement;\r\n       \r\n        const chkAnswer = document.getElementById(\"chk-correct\") as HTMLInputElement;\r\n        const a: IAnswer = {\r\n            text: answer.value,\r\n            isCorrect: chkAnswer.checked\r\n        }\r\n        \r\n        if(a.text != \"\"){\r\n            questionAnswers.push(a);\r\n            updateAnswersList();\r\n        }\r\n\r\n        else{\r\n            alert(\"Geef een tekstuele waarde in voor het antwoord.\")\r\n        }\r\n        \r\n\r\n        answer.value = '';\r\n        chkAnswer.checked = false;\r\n    });\r\n\r\n  \r\n\r\n    document.getElementById(\"btn-add-player\")?.addEventListener(\"click\", () => {\r\n        const input = document.getElementById(\"player-name\") as HTMLInputElement;\r\n        const name = input.value.trim();\r\n\r\n        if(name === ''){\r\n            alert('Naam mag niet leeg zijn')\r\n            return;\r\n        }\r\n\r\n        const existingPlayers = quizApp.players.find(player => player.name === name);\r\n    if (existingPlayers) {\r\n        alert('Kies een unieke naam')\r\n        return;\r\n    }\r\n        \r\n        quizApp.addPlayer(name);\r\n    \r\n        input.value = \"\";\r\n\r\n        if (quizApp.players.length === quizApp.numberOfPlayers) {\r\n            showCurrentPlayerBlock();\r\n            updateVisibleItem(divQuizContainer);\r\n            quizApp.startQuiz();\r\n        }else\r\n                alert(`voeg nog ${quizApp.numberOfPlayers - quizApp.players.length} spelers toe`);\r\n            \r\n        \r\n    });\r\n\r\n    // implement logic to submit the answer, update the score and move to the next question\r\n    // implement logic to restart the game\r\n    document.getElementById('btn-restart-game')?.addEventListener('click', () => {\r\n        restartGame();\r\n        \r\n    })\r\n\r\n    const restartGame = () => {\r\n        quizApp.questions = [];\r\n        quizApp.players = [];\r\n        quizApp.currentPlayerIndex = 0;\r\n        quizApp.currentQuestionIndex = 0;\r\n        hideAllElementsExcept(divWelcome);\r\n    };\r\n\r\n    document.getElementById(\"btn-submit\")?.addEventListener('click', () => {\r\n        // Zoek het geselecteerde antwoord\r\n        const selectedAnswer = document.querySelector('input[type=\"radio\"]:checked');\r\n\r\n        const id = quizApp.currentQuestionIndex;\r\n        const correctAnswerList = document.getElementById(\"correct-answer-list\") as HTMLElement\r\n\r\n        const selectedAnswerValue = (selectedAnswer as HTMLInputElement).value\r\n\r\n        const correctAnswer = correctAnswerList.contains(selectedAnswer)\r\n\r\n        const correctQuestion = quizApp.testIfAnswerIsCorrect(quizApp.currentQuestionIndex ,selectedAnswerValue)\r\n        \r\n        console.log(selectedAnswerValue)\r\n        console.log(correctQuestion)\r\n\r\n        const currentPlayer = quizApp.players[quizApp.currentPlayerIndex]\r\n        \r\n        if(correctQuestion == true){\r\n            currentPlayer.updateScore(1)\r\n        }\r\n        \r\n        console.log(currentPlayer)\r\n        console.log(currentPlayer.score)\r\n        console.log(quizApp.currentQuestionIndex)\r\n\r\n        quizApp.nextQuestion()\r\n        \r\n    });\r\n    \r\n\r\n\r\n    const updateQuestionList = () => {\r\n        const noQuestions = document.getElementById(\"no-questions\") as HTMLElement;\r\n        const list = document.getElementById(\"question-list\") as HTMLElement;\r\n\r\n        list.innerHTML = '';\r\n\r\n        quizApp.questions.forEach(q => {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = q.toString();\r\n            list.appendChild(li);\r\n        });\r\n        noQuestions.classList.add('d-none');\r\n    };\r\n\r\n    const updateAnswersList = () => {\r\n        const answersList = document.getElementById(\"answers-list\") as HTMLElement;\r\n        const correctAnswerList = document.getElementById(\"correct-answer-list\") as HTMLElement;\r\n\r\n        answersList.innerHTML = '';\r\n        correctAnswerList.innerHTML = '';\r\n\r\n        questionAnswers.forEach(a => {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = a.text;\r\n            \r\n            answersList.appendChild(li);\r\n        });\r\n\r\n        const correctAnswer = questionAnswers.find(a => a.isCorrect)\r\n        if (correctAnswer) {\r\n            const li = document.createElement(\"li\");\r\n            li.textContent = correctAnswer.text;\r\n            correctAnswerList.appendChild(li);\r\n        }\r\n\r\n        toggleAddButton(correctAnswer);\r\n    };\r\n\r\n    const clearAnwsersList = () => {\r\n        questionAnswers.length = 0;\r\n        updateAnswersList();\r\n    };\r\n\r\n    const toggleAddQuestionButton = () => {\r\n        const btn = document.getElementById(\"btn-add-q\") as HTMLButtonElement;\r\n        if (quizApp.questions.length === quizApp.quizDuration * quizApp.numberOfPlayers) {\r\n            btn.disabled = true;\r\n        }\r\n    };\r\n\r\n    const toggleAddButton = (correctAnswer: IAnswer | undefined) => {\r\n        const btn = document.getElementById(\"btn-add-question\") as HTMLButtonElement;\r\n        btn.disabled = correctAnswer ? false : true;\r\n    };\r\n\r\n    const hideAllElementsExcept = (element: HTMLElement) => {\r\n        const elementsToHide = [divCurrentPlayer, divWelcome, divQuestionsContainer, divPlayersContainer, divQuizContainer, divScoreboardContainer, divQuestionApiContainer];\r\n        elementsToHide.forEach(e => {\r\n            if (e !== null)\r\n                e.classList.add('d-none')\r\n        });\r\n        element.classList.remove('d-none');\r\n    };\r\n\r\n    const updateVisibleItem = (element: HTMLElement) => {\r\n        hideAllElementsExcept(element);\r\n\r\n        if (element === divQuestionApiContainer || element === divQuestionsContainer) {\r\n            const btnAdd = document.getElementById(\"btn-add-q\") as HTMLButtonElement;\r\n            const btnNext = document.getElementById(\"btn-next\") as HTMLButtonElement;\r\n            if (quizApp.questionMode === QuestionMode.Custom) {\r\n                btnNext.classList.add(\"d-none\");\r\n                btnAdd.classList.remove(\"d-none\");\r\n                return;\r\n            } else {\r\n                btnNext.classList.remove(\"d-none\");\r\n                btnAdd.classList.add(\"d-none\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (element === divQuizContainer) {\r\n            showCurrentPlayerBlock();\r\n            return;\r\n        }\r\n    };\r\n\r\n    const validateQuestionInput = (questionText: string, answers: IAnswer[]): boolean => {\r\n        \r\n        if(wordCount(questionText) < 5){\r\n            alert(\"De vraag moet minstens 5 woorden omvatten.\")\r\n            return false\r\n        }\r\n        if (checkAnswers(answers) == false){\r\n            alert(\"Geef minstens 2 antwoorden waarvan 1 correct.\")\r\n            return false\r\n        }\r\n\r\n        else{\r\n            return true\r\n        }\r\n        // implement validation logic, return true if the input is valid\r\n        // logic: questionText should have at least 5 characters, answers should have at least one correct answer\r\n       \r\n    };\r\n\r\n    const showCurrentPlayerBlock = () => {\r\n        const currentPlayer = document.getElementById(\"current-player-container\") as HTMLElement;\r\n        currentPlayer.classList.remove(\"d-none\");\r\n        const currentPlayerName = document.getElementById(\"current-player-name\") as HTMLElement;\r\n        currentPlayerName.innerText = quizApp.players[quizApp.currentPlayerIndex]?.name ?? '';\r\n    }\r\n    \r\n\r\n    const init = () => {\r\n        hideAllElementsExcept(divWelcome);\r\n        //fillDificulty(); //dif meegeven bij opstart\r\n        //fillCategories(); //cat meegeven bij opstart\r\n    }\r\n\r\n    function wordCount(questionText: string){\r\n        const words = questionText.split(\" \")\r\n        return words.length\r\n    }\r\n\r\n\r\n    function checkAnswers(answersList: IAnswer[]){\r\n        if (answersList.length < 2){\r\n            return false\r\n        }\r\n\r\n\r\n        answersList.forEach(a => {\r\n            if  (a.isCorrect == true){\r\n                return true\r\n            }\r\n\r\n            if (a.text == \"\"){\r\n                return false\r\n            }\r\n\r\n            return false\r\n        });\r\n\r\n        return true\r\n    }\r\n\r\n\r\n\r\n   init();\r\n\r\n});\r\n","__webpack_require__.h = () => (\"fd52180f6e36581c0d9a\")"],"names":["question","answers","addAnswer","answer","push","toString","map","a","text","join","this","name","isCurrent","updateScore","score","QuestionMode","questions","players","duration","numberofPlayers","quizDuration","currentQuestionIndex","questionMode","Custom","currentPlayerIndex","numberOfPlayers","setQuestionMode","mode","addQuestion","q","includes","addPlayer","player","updatePlayerList","removePlayer","filter","startQuiz","disableNavigation","nextQuestion","document","querySelectorAll","forEach","link","addEventListener","preventNavigation","bind","enableNavigation","removeEventListener","event","preventDefault","stopPropagation","showCustomAlert","message","timer","timerProgressBar","showConfirmButton","position","toast","testIfAnswerIsCorrect","index","correctAnswer","find","x","isCorrect","length","endQuiz","showQuestion","elementId","playersList","getElementById","innerHTML","li","createElement","textContent","appendChild","hideQuiz","showScoreBoard","quizContainer","classList","add","showCurrentPlayer","currentPlayerContainer","currentPlayerName","remove","sortPlayersOnScore","sort","b","btnRestart","scoreBoardContainer","scoreBoard","window","location","href","questionElement","possibleAnswers","label","radio","type","value","createTextNode","style","display","marginBottom","GameMode","quizApp","Quiz","questionAnswers","divWelcome","divQuestionsContainer","divPlayersContainer","divQuizContainer","divScoreboardContainer","divQuestionApiContainer","divCurrentPlayer","updateVisibleItem","btn","btnAddPlayer","showCurrentPlayerBlock","e","gameMode","target","checked","Single","Multi","gameModeText","inpNumberPlayers","numberOfPlayersInput","parseInt","console","log","number","disabled","questionText","innerText","Api","navigation","btnCloseModal","validateQuestionInput","updateQuestionList","clearAnwsersList","click","toggleAddQuestionButton","chkAnswer","updateAnswersList","alert","input","trim","restartGame","hideAllElementsExcept","selectedAnswer","querySelector","correctAnswerList","selectedAnswerValue","correctQuestion","contains","currentPlayer","noQuestions","list","answersList","toggleAddButton","element","btnAdd","btnNext","split","wordCount","__webpack_require__","h"],"sourceRoot":""}